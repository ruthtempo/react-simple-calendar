{"mappings":"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","sources":["src/index.tsx"],"sourcesContent":["import React, { useState } from \"react\"\nimport { differenceInCalendarDays, endOfMonth, endOfWeek, getWeeksInMonth, isSameMonth, isToday } from \"date-fns\";\nimport { add, startOfMonth, sub, getDate, startOfWeek } from \"date-fns/esm\";\nimport format from \"date-fns/format\";\n\ntype WeekStartsOn = 0 | 1 | 2 | 3 | 4 | 5 | 6\n\ninterface CalendarRecord {\n  day: Date,\n  isCurrentDate: boolean,\n  isCurrentMonth: boolean\n}\n\nfunction getDaysArray(selectedMonth: Date, weekStartsOn: WeekStartsOn): CalendarRecord[] {\n  const start = startOfMonth(selectedMonth)\n  const begginingOfWeek = startOfWeek(start, { weekStartsOn })\n\n  const end = endOfMonth(selectedMonth)\n  const endOfTheWeek = endOfWeek(end, { weekStartsOn })\n\n  const daysCount = differenceInCalendarDays(endOfTheWeek, begginingOfWeek)\n  const daysInMonth: CalendarRecord[] = []\n\n  for (let i = 0; i <= daysCount; i++) {\n    const currentDate = add(begginingOfWeek, { days: i })\n\n    daysInMonth.push({\n      day: currentDate,\n      isCurrentDate: isToday(currentDate),\n      isCurrentMonth: isSameMonth(currentDate, selectedMonth)\n    })\n  }\n  return daysInMonth\n}\n\nfunction getWeeks(\n  days: CalendarRecord[],\n  currentDate: Date,\n  weekStartsOn: WeekStartsOn\n): CalendarRecord[][] {\n  const numberOfWeeks = getWeeksInMonth(currentDate, { weekStartsOn })\n  const month: CalendarRecord[][] = []\n  let counter = 0\n  //weeks\n  for (let j = 1; j <= numberOfWeeks; j++) {\n    const week: CalendarRecord[] = []\n\n    //days\n    for (let i = 0; i <= 6; i++) {\n      week.push(days[counter])\n      counter++\n    };\n    month.push(week)\n  }\n  return month\n}\n\n\nconst defaultRenderWeekday = (weekday: string): JSX.Element =>\n  <td key={weekday}>{weekday}</td>\n\nconst defaultRenderDay = (day: CalendarRecord): JSX.Element =>\n  <td key={day.day.toISOString()}>\n    {getDate(day.day)}\n  </td>\n\nconst defaultMonthTitle = (\n  currentDate: Date,\n  prevMonth: () => void,\n  nextMonth: () => void,\n): JSX.Element => (\n  <div style={{ display: 'flex' }}>\n    <button onClick={prevMonth}>prev</button>\n    <h3>{format(currentDate, 'MMMM yyyy')}</h3>\n    <button onClick={nextMonth} >next</button>\n  </div>\n)\n\nconst defaultRenderTable = (children: JSX.Element) =>\n  <table>\n    {children}\n  </table>\n\nexport const Calendar = (p: {\n  renderWeekday?: typeof defaultRenderWeekday,\n  renderDay?: typeof defaultRenderDay,\n  renderMonthTitle?: typeof defaultMonthTitle,\n  renderTable?: typeof defaultRenderTable,\n  weekStartsOn?: WeekStartsOn,\n  weekDayLabels?: string[]\n}) => {\n  const weekdays = [\"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\", \"SUN\"];\n\n  const [currentDate, setCurrentDate] = useState(new Date())\n  const daysInMonth = getDaysArray(currentDate, p.weekStartsOn ?? 1)\n  const rows = getWeeks(daysInMonth, currentDate, p.weekStartsOn ?? 1)\n\n  function nextMonth() {\n    setCurrentDate(add(currentDate, { months: 1 }))\n  }\n\n  function prevMonth() {\n    setCurrentDate(sub(currentDate, { months: 1 }))\n  }\n\n  return (\n    (p.renderTable ?? defaultRenderTable)(\n      <>\n        <thead>\n          <tr>\n            <th colSpan={7}>\n              {(p.renderMonthTitle ?? defaultMonthTitle)(currentDate, prevMonth, nextMonth)}\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            {(p.weekDayLabels ?? weekdays).map(p.renderWeekday ?? defaultRenderWeekday)}\n            {/* <td key={weekday}><small>{weekday}</small></td> */}\n          </tr>\n          {rows.map(row => (\n            <tr key={row[0].day.toISOString()} >\n              {row.map(p.renderDay ?? defaultRenderDay)}\n              {/* {row.map(day => (p.renderDay ?? defaultRenderDay)(day))} */}\n            </tr>\n          ))}\n        </tbody>\n      </>\n    )\n  )\n}\n"],"names":[],"version":3,"file":"module.js.map"}